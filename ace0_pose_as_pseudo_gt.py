#!/usr/bin/env python3
import os
import argparse
import numpy as np

def quat_to_rot_matrix(qw, qx, qy, qz):
    q = np.array([qw, qx, qy, qz], dtype=np.float32)
    q = q / np.linalg.norm(q)
    w, x, y, z = q
    return np.array([
        [1-2*(y*y+z*z),   2*(x*y - z*w), 2*(x*z + y*w)],
        [2*(x*y + z*w), 1-2*(x*x+z*z),   2*(y*z - x*w)],
        [2*(x*z - y*w),   2*(y*z + x*w), 1-2*(x*x+y*y)]
    ], dtype=np.float32)

def main(poses_file, output_dir):
    os.makedirs(output_dir, exist_ok=True)
    lines = open(poses_file, 'r').read().splitlines()
    i = 0
    while i < len(lines):
        parts = lines[i].split()
        if not parts:
            i += 1
            continue

        filename = parts[0]
        if len(parts) >= 9:
            qw, qx, qy, qz, tx, ty, tz = map(float, parts[1:8])
            R = quat_to_rot_matrix(qw, qx, qy, qz)
            t = np.array([tx, ty, tz], dtype=np.float32).reshape(3,1)
            H = np.vstack([ np.hstack([R, t]), [0,0,0,1] ])
            i += 1
        else:
            block = lines[i+1:i+5]
            mat = [list(map(float, l.split())) for l in block]
            H = np.array(mat, dtype=np.float32)
            i += 5

        pose_name = filename.replace('.color.png', '.pose.txt')
        out_path = os.path.join(output_dir, pose_name)
        with open(out_path, 'w') as f:
            for row in H:
                f.write(' '.join(f"{v:.6f}" for v in row) + '\n')

    print(f"Done! Converted to 4Ã—4 .pose.txt in:\n  {output_dir}")

if __name__ == '__main__':
    p = argparse.ArgumentParser()
    p.add_argument('poses_file', help="Path to poses_final.txt generated by ACE0")
    p.add_argument('output_dir',  help="Directory to output frame-*.pose.txt files")
    args = p.parse_args()
    main(args.poses_file, args.output_dir)
